import gmpy2
import binascii

p = 13407807929942597099574024998205846127479365820592393377723561443721764030073662768891111614362326998675040546094339320838419523375986027530441562135724301
q = 13407807929942597099574024998205846127479365820592393377723561443721764030073778560980348930557750569660049234002192590823085163940025485114449475265364281

fi = (p - 1) * (q - 1)

e = 65537

d = gmpy2.invert(e, fi)

i = 1
m = 1
c = 22096451867410381776306561134883418017410069787892831071731839143676135600120538004282329650473509424343946219751512256465839967942889460764542040581564748988013734864120452325229320176487916666402997509188729971690526083222067771600019329260870009579993724077458967773697817571267229951148662959627934791540
N = 179769313486231590772930519078902473361797697894230657273430081157732675805505620686985379449212982959585501387537164015710139858647833778606925583497541085196591615128057575940752635007475935288710823649949940771895617054361149474865046711015101563940680527540071584560878577663743040086340742855278549092581

# compute c^d mod N
while i <= d:
    if i & d != 0:
        m = gmpy2.c_mod(m * c, N) + N
    i = i << 1
    c = gmpy2.c_mod(c * c, N) + N

h = hex(m)
print h
l = len(h) - 1
while (l > 1 and not(h[l] == '0' and h[l - 1] == '0')):
    l = l - 1

print h[l+1:].decode('hex')




